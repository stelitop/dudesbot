plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.johnrengelman.shadow' version '7.1.1'
}

group = 'stelitop'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	implementation 'org.reflections:reflections:0.10.2'
	implementation 'com.discord4j:discord4j-core:3.2.3'
	implementation 'org.jetbrains:annotations:24.0.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task fatJar(type: Jar) {
	manifest {
		attributes 'Main-Class': 'stelitop.dudesbot.DudesbotApplication'
	}
	baseName = 'all-in-one-jar'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

jar {
	manifest {
		attributes(
				'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
				'Main-Class': 'stelitop.dudesbot.DudesbotApplication'
		)
	}
}